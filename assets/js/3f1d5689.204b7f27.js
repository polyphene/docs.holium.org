"use strict";(self.webpackChunkholium_docs=self.webpackChunkholium_docs||[]).push([[788],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return d}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),f=s(r),d=o,m=f["".concat(c,".").concat(d)]||f[d]||p[d]||a;return r?n.createElement(m,i(i({ref:t},u),{},{components:r})):n.createElement(m,i({ref:t},u))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},7698:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return u},default:function(){return f}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),i=["components"],l={sidebar_position:1},c="Rationale",s={unversionedId:"reference/sdk/rationale",id:"reference/sdk/rationale",isDocsHomePage:!1,title:"Rationale",description:"The transformations ran in the Holium protocol are Wasm based, meaning that code developed to run on the CLI",source:"@site/docs/reference/sdk/rationale.md",sourceDirName:"reference/sdk",slug:"/reference/sdk/rationale",permalink:"/reference/sdk/rationale",editUrl:"https://github.com/polyphene/holium-docs/blob/main/docs/reference/sdk/rationale.md",version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"CLI",permalink:"/reference/cli"},next:{title:"Glossary",permalink:"/reference/sdk/glossary"}},u=[],p={toc:u};function f(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"rationale"},"Rationale"),(0,a.kt)("p",null,"The transformations ran in the Holium protocol are Wasm based, meaning that code developed to run on the CLI\nhas to be compiled to Wasm bytecode."),(0,a.kt)("p",null,"As we aim for a global approach with our protocol we try to encompass as many languages as possible, allowing\nfor many codebase to be usable. In that regard, one SDK should be developed per language that we wish\nto be usable in the Holium protocol. "),(0,a.kt)("p",null,"The role of a Holium SDK is to adapt a codebase to run within the Holium protocol by following the\n",(0,a.kt)("a",{parentName:"p",href:"/reference/sdk/specifications"},"specifications"),". "),(0,a.kt)("p",null,"At first the focus is most likely to be pointed on languages that currently support direct compilation\nto Wasm (mostly statically typed languages). About dynamically typed languages some research are currently\nunderway to study how they could be integrated as a base for transformation."))}f.isMDXComponent=!0}}]);