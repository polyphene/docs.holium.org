"use strict";(self.webpackChunkholium_docs=self.webpackChunkholium_docs||[]).push([[940],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return c}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=p(n),c=a,f=m["".concat(l,".").concat(c)]||m[c]||d[c]||o;return n?r.createElement(f,s(s({ref:t},u),{},{components:n})):r.createElement(f,s({ref:t},u))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var p=2;p<o;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7886:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return u},default:function(){return m}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),s=["components"],i={sidebar_label:"Add a transformation",sidebar_position:4},l="Add modules",p={unversionedId:"get-started/add-transformations",id:"get-started/add-transformations",isDocsHomePage:!1,title:"Add modules",description:"Following the creation of data sources, we will now add the next elements in line: Holium transformations.",source:"@site/docs/get-started/add-transformations.md",sourceDirName:"get-started",slug:"/get-started/add-transformations",permalink:"/docs.holium.org/get-started/add-transformations",editUrl:"https://github.com/polyphene/holium-docs/blob/main/docs/get-started/add-transformations.md",version:"current",sidebarPosition:4,frontMatter:{sidebar_label:"Add a transformation",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Add data sources",permalink:"/docs.holium.org/get-started/add-data-sources"},next:{title:"Add a shaper",permalink:"/docs.holium.org/get-started/add-shaper"}},u=[],d={toc:u};function m(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"add-modules"},"Add modules"),(0,o.kt)("p",null,"Following the creation of data sources, we will now add the next elements in line: Holium ",(0,o.kt)("strong",{parentName:"p"},"transformations"),"."),(0,o.kt)("p",null,"Holium transformations are contained in ",(0,o.kt)("strong",{parentName:"p"},"modules")," and can be considered as functions. Holium\nmodules are compiled Wasm bytecodes that follow the ",(0,o.kt)("a",{parentName:"p",href:"/docs.holium.org/reference/sdk/specifications"},"SDK specifications"),"."),(0,o.kt)("p",null,"In this tutorial we will be using modules compiled from Rust code that makes use of the Rust SDK. For\nmore information on how it works please refer to the ",(0,o.kt)("a",{parentName:"p",href:"/docs.holium.org/reference/sdk/rust-sdk/usage"},"dedicated reference"),"."),(0,o.kt)("p",null,"As we want to keep our pipeline simple we will only add a single transformation in our pipeline DAG."),(0,o.kt)("p",null,"The module code that we are using can be found in the ",(0,o.kt)("inlineCode",{parentName:"p"},"./module/avocado_operations")," folder of the\n",(0,o.kt)("em",{parentName:"p"},"Getting started")," repostiory."),(0,o.kt)("p",null,"To build the module we first need the target to be installed:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"$ rustup target add wasm32-unknown-unknown\n")),(0,o.kt)("p",null,"We may then use native ",(0,o.kt)("inlineCode",{parentName:"p"},"cargo build")," sub-command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"$ cd module/avocado_operation\n$ cargo build --target wasm32-unknown-unknown --release\n")),(0,o.kt)("p",null,"Following the build, the wasm bytecode can be found at ",(0,o.kt)("inlineCode",{parentName:"p"},"./module/avocado_operations/target/wasm32-unknown-unknown/release/avocado_operations.wasm"),"."),(0,o.kt)("p",null,"To create a transformation we may then use the ",(0,o.kt)("inlineCode",{parentName:"p"},"holium transformation create")," sub-command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'$ cd ../..\n$ holium transformation create avocado_operations \\\n        --bytecode ./assets/wasm/avocado_operations.wasm \\\n        --handle get_sales_by_year \\\n        --json-schema-in \'\n        {\n            "type": "array",\n            "prefixItems": [{\n                "type": "array",\n                "items": {\n                    "type": "object",\n                    "properties": {\n                        "plu_4046": { "type": "number" },\n                        "plu_4225": { "type": "number" },\n                        "plu_4770": { "type": "number" },\n                        "date": { "type": "string" },\n                        "average_price": { "type": "number" },\n                        "total_volume": { "type": "number" },\n                        "total_bags": { "type": "number" },\n                        "small_bags": { "type": "number" },\n                        "large_bags": { "type": "number" },\n                        "xlarge_bags": { "type": "number" },\n                        "avocado_type": { "type": "string" },\n                        "year": { "type": "number" },\n                        "geography": { "type": "string" }\n                    }\n                }\n            }, {\n                "type": "number"\n            }]\n        }\n        \' \\\n        --json-schema-out \'\n         {\n            "type": "array",\n            "prefixItems": [{\n                "type": "array",\n                "items": {\n                    "type": "array",\n                    "prefixItems": [{\n                        "type": "string"\n                    }, {\n                        "type": "number"\n                    }]\n                }\n            }]\n        }\n        \'\nnew object created: avocado_operation\n')),(0,o.kt)("p",null,"Once it is done we can list our available transformation by using the ",(0,o.kt)("inlineCode",{parentName:"p"},"holium transformation list"),"\nsub-command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'$ holium transformation list\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 NAME               \u2502 HANDLE            \u2502 BYTECODE (size) \u2502 IN (JSON Schema)             \u2502 OUT (JSON Schema)            \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 avocado_operations \u2502 get_sales_by_year \u2502 2.09 MB         \u2502 {                            \u2502 {                            \u2502\n\u2502                    \u2502                   \u2502                 \u2502   "type": "array",           \u2502   "type": "array",           \u2502\n\u2502                    \u2502                   \u2502                 \u2502   "prefixItems": [           \u2502   "prefixItems": [           \u2502\n\u2502                    \u2502                   \u2502                 \u2502     {                        \u2502     {                        \u2502\n\u2502                    \u2502                   \u2502                 \u2502       "type": "array",       \u2502       "type": "array",       \u2502\n\u2502                    \u2502                   \u2502                 \u2502       "items": {             \u2502       "items": {             \u2502\n\u2502                    \u2502                   \u2502                 \u2502         "type": "object",    \u2502         "type": "array",     \u2502\n\u2502                    \u2502                   \u2502                 \u2502         "properties": {      \u2502         "prefixItems": [     \u2502\n\u2502                    \u2502                   \u2502                 \u2502           "plu_4046": {      \u2502           {                  \u2502\n\u2502                    \u2502                   \u2502                 \u2502             "type": "number" \u2502             "type": "string" \u2502\n\u2502                    \u2502                   \u2502                 \u2502           },                 \u2502           },                 \u2502\n\u2502                    \u2502                   \u2502                 \u2502           "plu_4225": {      \u2502           {                  \u2502\n\u2502                    \u2502                   \u2502                 \u2502             "type": "number" \u2502             "type": "number" \u2502\n\u2502                    \u2502                   \u2502                 \u2502  ...                         \u2502           }                  \u2502\n\u2502                    \u2502                   \u2502                 \u2502                              \u2502         ]                    \u2502\n\u2502                    \u2502                   \u2502                 \u2502                              \u2502    ...                       \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n')),(0,o.kt)("p",null,"Currently, we have two types of objects in our project, ",(0,o.kt)("strong",{parentName:"p"},"data sources")," and ",(0,o.kt)("strong",{parentName:"p"},"modules"),". Before building our\npipeline we will need to add one last element: a ",(0,o.kt)("strong",{parentName:"p"},"shaper"),"."))}m.isMDXComponent=!0}}]);